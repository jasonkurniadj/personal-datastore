[
  {
    "name": "Local Language Audio Classification",
    "start_date": "2024-03-01",
    "end_date": "2024-05-01",
    "short_description": "Built a pre-processing process and model to classify local languages in Indonesia, as well as hyperparameter tuning by using Python and TensorFlow.",
    "description": "",
    "category": "AI",
    "tags": [
      "Python",
      "TensorFlow",
      "audio",
      "language",
      "tuning"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Gift with Purchase",
    "start_date": "2024-01-01",
    "end_date": "2024-02-01",
    "short_description": "Supported the marketing strategy to offer free gifts by providing a correct billing calculation for sellable and unsellable products.",
    "description": "<p>Gift with Purchase (GWP) is a marketing strategy that sellers use to offer free gifts or free products to customers who purchase a specific product or reach certain spending criteria.</p><p>In the offline experience of the GWP scheme, there are two types of gifts:</p><ol><li>Physical gifts will be shipped along with the eligible product purchased -- Sellers attach their sellable (a product that they sell in their shop & can be bought in singular) or unsellable (can only be attained the gift through GWP offer and can't be bought as a standalone) gift to the offer.</li><li>Non-physical gifts will be received by buyers in the form of free service, warranty, or digital products -- Electronic and gadget brands usually distribute non-physical gifts such as warranties, and cloud or movie subscriptions.</li></ol><p>In Tokopedia, the demand for GWP has been seen as well. However, as <b>the feature is not yet available</b> on our platform, sellers using the hacky way by exerting more efforts in creating a new product which consists of both a purchasable product and gift, then adding the GWP information through product image, title, or description. This condition does not give assurance to buyers that they will receive the additional product (gift) since they only purchase one SKU only, which <b>can cause orders to be canceled</b>. Furthermore, sellers need to put more effort into managing the stock from multiple products. It causes the product performance not to be centralized, impacting the related service not optimally indexing products and affecting the search results for buyers.</p><p>In order to support the campaign team, I had a responsibility to be in charge as a PIC from my team to make sure the free gift product does not charge and is included in the billing calculation, including the commission calculation.</p><p>I began this project by collecting and understanding all the information. After that, I started assessing and then created a comprehensive tech plan. In this project, I also helped during the development and testing phase to ensure the correctness of the functional requirements.</p><p>The release was smooth and no post-release bug was found. By the impacts, this project <b>increases the average transaction value</b> and boosts sales in Tokopedia by <b>contributing 2 billion to Tokopedia's GMV in the first month and 20 billion in the second month</b> after release.</p>",
    "category": "Backend",
    "tags": [
      "gift",
      "purchase",
      "marketing",
      "promotion"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Cost Optimization",
    "start_date": "2023-09-01",
    "end_date": "2024-01-01",
    "short_description": "Analyzed and optimized all business flow, usecases logic, and resources, including cloud instances utilization, libraries, etc. The goal is to reduce cost usage as well as improve performance.",
    "description": "<p>2023 is a crucial year due to the post-pandemic period. This year, top management has several key priorities to maintain and showcase the company's vision, which is the democratization of commerce through technology. This project will cover two key priorities, which are <b>platform strengthening and financial optimization</b>.</p><p>In this project, I had a responsibility to be in charge as a PIC from my team. It's quite challenging since we should <b>optimize the resources to decrease costs, but we must keep and improve the performance</b>.</p><p>The main actions in this project are assessing and brainstorming. These two processes are fundamental and vital before we know the next action items to do optimization. My colleagues and I have weekly checkpoints to monitor our progress. After a long discussion and insightful analysis, we found several solutions to optimize our services. At this point, I need to create a comprehensive tech plan, especially the risk mitigation and rollback plan. I monitor all the plans and progress for each solution we execute, as well as monitor the impact after the execution.</p><p>To sum up, there are several action items that we have done, such as optimizing the architecture at high and low levels, optimizing the logic in the code base, optimizing DB & query, and downscaling the cloud resources. On top of that, this project <b>saves the financial cost of up to USD 256,000 annually</b>.</p>",
    "category": "Backend",
    "tags": [
      "cost",
      "optimization",
      "performance",
      "business",
      "cloud"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Financial Transparency",
    "start_date": "2023-09-01",
    "end_date": "2023-11-01",
    "short_description": "Created a backend system to support transparency that enables sellers to see the breakdown details of the revenue and cost of each order even though the order has not yet been finished.",
    "description": "<p>As Tokopedia is trying to achieve positive EBITDA contributions, seller's monetization becomes one of the major revenue streams for the Tokopedia marketplace. From the seller's perspective, the cost of business for an order has grown from year to year in Tokopedia, where there are more than seven different marketplace fees that can happen in one order. With these many fees or commissions, one major pain point is to improve the transparency of deductions for pre and post-finished order journeys.</p><p>This project has three big pillars:<ol><li>1. Planning and budgeting</li><li>2. Monitoring</li><li>3. Bookkeeping</li></ol></p><p>With the previous condition, sellers can only see the financial statement when the order is finished. Therefore, my team and I built a one-stop solution page to equip sellers with the right tools to manage and organize their revenue-cost ratio. We also revisited and redefined the seller reporting to streamline and integrate to all-in-one report.</p><p>I began by collecting all requirements, both functional and non-functional requirements. After I got detailed information, I started brainstorming with my internal team and across teams since this project has multiple dependencies. For the development phase, I also helped to create a new endpoint for this project as well as refactor the service by creating a new common function for all fee or commission use cases.</p><p>In the end, this project gives sellers satisfaction since the sellers can manage and organize their revenue-cost ratio which has indirect impacts on their seller growth. On top of that, this project enables the company to achieve and maintain compliance by ensuring adherence to regulatory standards and best practices.</p>",
    "category": "Backend",
    "tags": [
      "finance",
      "transparency",
      "revenue",
      "cost",
      "compliance"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Fulfillment Handling Fee Deduction",
    "start_date": "2023-07-01",
    "end_date": "2023-10-01",
    "short_description": "Created a backend system using Go to calculate and real-time deduct a fulfillment handling fee from the seller for every finished transaction.",
    "description": "<p>DilayaniTokopedia (DT) is a trusted warehouse service provided by Tokopedia to process & send buyer orders to all regions in Indonesia with a guarantee of being safe & on time.</p><p>DT as of January 2023 has served more than 1,500 3P merchants from across categories and we charge the merchants several fees, such as storage fee and handling fee. However, there are gaps in the previous pricing structure. In terms of handling fee, the different product dimensions & weights are previously charged the same handling fee, despite the different costs incurred to handle the items. So, to increase DT's take rate and to cross-monetize across the categories, DT would like to <b>revamp the previous charging schemes</b> for handling fees.</p><p>In this project, I had a responsibility to be in charge as a PIC from my team. The objectives are:<ol><li>The handling fee charging will be determined by product category and size per product item.</li><li>Different product categories will have different charging % and min or max caps which can be configurable.</li><li>Different product sizes (dimension x weight) in the same category will have different charging rates %.</li></ol></p><p>I began by collecting all requirements, both functional and non-functional requirements. After I got detailed information about this project, I started brainstorming with my colleagues to find the solutions. Brainstorming is an essential process since I need to create a <b>modular and scalable</b> system for the business use cases in the future. After that, I created a comprehensive tech plan, from the background, solutions, functional changes, task breakdown, risk mitigation, release plan, etc. In the end, I also helped in the development and testing phase, as well as monitored the other tasks related to this project.</p><p>This project has several stakeholders, so we need to make sure all stakeholders have the same vision. Hence, we have a weekly meeting to monitor our progress. To ensure the correctness of the technical requirements, I helped and monitored the testing process. The QA team and I have regular check-ins to ensure the correctness and completeness of the testing coverage.</p><p>In the end, under my leadership, this project was released smoothly without a concerning issue. All the phases are completed within the timeline and all blockers can be solved together. After the release, this project <b>generated a new income of more than IDR 100 million per day</b>.</p>",
    "category": "Backend",
    "tags": [
      "Go",
      "fee",
      "deduction",
      "modular"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": true
  },
  {
    "name": "Survey Qualitative Analysis",
    "start_date": "2023-02-01",
    "end_date": "2023-04-01",
    "short_description": "Built a data pipeline and in-house AI model by using Python, TensorFlow, and Microsoft Azure to group the survey by doing sentiment analysis for every submitted Indonesian comment.",
    "description": "",
    "category": "AI",
    "tags": [
      "Python",
      "TensorFlow",
      "data",
      "LLMs"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": true
  },
  {
    "name": "Financial Automation Workflow",
    "start_date": "2022-11-01",
    "end_date": "2022-12-01",
    "short_description": "Provided consultation and solutions by using robotic process automation (RPA) to solve financial workflow problems from data collection to payment verification.",
    "description": "<p>There is a request from one Indonesian government agency to <b>solve and optimize</b> their internal financial flow. When they want to conduct an event, they will need a lot of parties to help organize the event, such as crews, speakers, logistics, etc. The parties involved in this event will need funding to execute their tasks and responsibilities. Previously, all the processes from the funding request, transfer, and accountability report were processed manually, both for cash-advance and reimbursement schema. It takes a lot of time and there is a high chance of human error.</p><p>In this project, I have responsibilities to <b>assess, identify, and propose</b> the best solution to solve the problem. After that, I need to <b>drive the proof-of-concept until the implementation</b>. The target is to meet the client's expectations and the project is finished within the timeline.</p><p>As a consultant and outsider (not working in that agency), I need to know the current workflow, detailed process, stakeholders involved, and the behavior to process end-to-end. After that, I did some analysis and got the comprehensive detailed processes. At this point, I can identify the bottleneck and how to optimize it at a high level. I created the analysis report for my client, including the root cause of the bottleneck process and solutions. I give several options of detailed solutions to give an alternative option, so the client can choose the suitable one with their procurement and governance policy.</p><p>After a long discussion, we decided to build an automation using the robotic process automation (RPA) approach. So, I did the vendor management to find which vendor matched well with the requirements and goals. Finally, the rest of the project is to build the proof-of-concept and drive to the implementation. The chosen vendor and I have a weekly meeting so I can monitor the progress and make sure we are still on track. Besides that, I have bi-weekly meetings with the client, so I can manage the client's expectations.</p><p>I completely understand that this project needs a balance of soft skills and hard skills. Besides discussing technical things, I need to maintain good communication and partnership with the client and other stakeholders. In the end, this project can <b>save process time up to 85%</b>. This saving increases productivity and leads the departments to focus on other problems that happen in society.</p>",
    "category": "Consulting",
    "tags": [
      "RPA",
      "automation",
      "finance",
      "workflow"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": true
  },
  {
    "name": "Tax Automation",
    "start_date": "2022-09-01",
    "end_date": "2022-11-01",
    "short_description": "Created a backend system to process tax invoices automatically. The process includes the KYC process, tax calculation, generating tax invoice to 3rd party, and sending the generated tax invoice.",
    "description": "",
    "category": "Backend",
    "tags": [
      "Go",
      "tax",
      "automation",
      "KYC"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Seller Reward Program Disbursement",
    "start_date": "2022-06-01",
    "end_date": "2022-08-01",
    "short_description": "Created a new backend app using Go to handle all the rewards. This project focuses on rewarding sellers based on sales results or merchant growth.",
    "description": "<p>To incentivise the merchants who perform exceptionally well in key business metrics, we created a <b>Rebate Program</b> to share a certain business target for each merchant based on their historical performance. There are a total of three qualifiers for a seller to qualify for this program:<ol><li>Qualifier #0: Power Merchant Pro -- Seller has to stay with the Power Merchant Pro (PM Pro) shop tier for the whole month.</li><li>Qualifier #1: Basic Eligibility (Business Growth) -- Seller has a business growth target determined by their reputation badge.</li><li>Qualifier #2: Rebate Disbursement Scheme (Business Size or Business Growth) -- Each shop that qualifies for rebate will be given a rebate rate according to business size and growth.</li></ol></p><p>For now, there only be one currency of rebate form, which is TopAds Credit -- the balance that will be used to pay for merchant ads in Tokopedia. TopAds credit will disburse the rebate amount when the sum of the seller's TopAds credit is more than IDR 50k and there will be a flat tax fee that will be deducted from the rebate amount.</p><p>In this project, I need to <b>create a new backend service using Go</b> to handle all the rewards. The rewards will disbursed at the beginning of every month for eligible sellers based on a predetermined calculation. I also need to provide a configuration that is modular enough in case there are any changes in business size and growth calculation. Not only about rebates and configuration, but the service should also provide information on progress so the seller is able to see the target that needs to be archived.</p><p>I began by collecting all requirements, both functional and non-functional requirements. Brainstorming is an essential process since I need to create a modular for business calculation changes in the future. This project has multiple stakeholders, so we need to make sure all stakeholders understand their scope. After that, I helped to create a comprehensive tech plan and also helped in the development and testing phase.</p><p>In the end, the service <b>validates more than 100,000 merchants monthly</b> and <b>disburses to more than 60,000 qualified merchants</b>. The finance team can also easily reconcile the rebate amount per month, including the tax. This project also eventually <b>increased the number of transactions by 20%</b>.</p>",
    "category": "Backend",
    "tags": [
      "Go",
      "reward",
      "disbursement"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Dynamic Commission Charging",
    "start_date": "2022-05-01",
    "end_date": "2022-06-01",
    "short_description": "Created a system using Go that enables commission charging based on the shop type and product category.",
    "description": "",
    "category": "Backend",
    "tags": [
      "Go",
      "commission",
      "deduction"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Charge and Payment Email Notification",
    "start_date": "2021-10-01",
    "end_date": "2021-11-01",
    "short_description": "Created a system that can send email notifications, such as invoice, reminder, and payment notifications. Invoice and charge notifications will be processed in batches, and payment notifications will be processed in stream.",
    "description": "",
    "category": "Full Stack",
    "tags": [
      "Java",
      "payment",
      "notification",
      "automation"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Zoom Synchronize",
    "start_date": "2020-07-01",
    "end_date": "2020-09-01",
    "short_description": "Created frontend & backend systems that can generate Zoom meeting links and integrate to another app for online teaching and learning purposes because of the impact of COVID-19.",
    "description": "",
    "category": "Full Stack",
    "tags": [
      "Java",
      "Zoom",
      "generate"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": false
  },
  {
    "name": "Student Payment using Virtual Account",
    "start_date": "2019-05-01",
    "end_date": "2019-07-01",
    "short_description": "Created a middleware by using .NET to integrate bank partner into the internal Java/Oracle PeopleSoft system to provide real-time payment using a virtual account.",
    "description": "<p>Binus University has several campuses, education levels, and major or schools. Previously, Binus University used a lot of types of payment methods to receive payment from the students. However, every campus and education level has its own method, including auto debit, direct debit, etc. In terms of process, all process is processed manually which can cause human error and delay in deduction. Besides that, it's hard to reconcile, and maintain a separate and different system, especially when there is a business expanse.</p><p>In this project, I need to build a <b>centralized payment system</b> to use across Binus University. The general objective is to easily maintain the system and reconcile the payment. I have a responsibility to provide a hosted payment that enables students to pay using a bank virtual account (VA) and directly reflect the internal system. Besides that, I need to create a setup to easily configure the whole settings to ensure the usage of VA for all students across Binus University.</p><p>I began this project by <b>collecting and understanding all the information</b>, including internal and partner capabilities, and business processes. To solve this problem, I <b>created a middleware integrated into a bank partner</b> using .NET and integrated it into the internal Java/Oracle PeopleSoft system. To accommodate the finance reconciliation, I also <b>provided reports</b> that can be used by the finance team to check the income from VA, which can also be cross-checked with the bank report. In this project, I conducted system development, internal testing, and UAT.</p><p>Due to this system being a real-time payment, this project <b>reduces staff's working hours to manually check and input each transaction by up to 75%</b> and increases the customer (student) experience. More than 10k active students use this VA and are satisfied with the instant payment capability & reliability. After this project, I also become a <b>point of contact</b> regarding the technical aspects of VA and the payment system at Binus University.</p>",
    "category": "Backend",
    "tags": [
      ".NET",
      "Java",
      "integrate",
      "payment",
      "va"
    ],
    "banner_url": "",
    "media": null,
    "is_home_display": true
  }
]
